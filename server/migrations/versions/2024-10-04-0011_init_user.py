"""Init User

Revision ID: 55e35779e745
Revises:
Create Date: 2024-10-04 00:11:54.659470

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# Culi Custom Imports

# revision identifiers, used by Alembic.
revision = "55e35779e745"
down_revision = None
branch_labels: tuple[str] | None = None
depends_on: tuple[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(length=50), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("email_verified", sa.Boolean(), nullable=False),
        sa.Column("profile", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("blocked_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("users_pkey")),
        sa.UniqueConstraint("username", name=op.f("users_username_key")),
    )
    op.create_index(op.f("ix_users_created_at"), "users", ["created_at"], unique=False)
    op.create_index(op.f("ix_users_deleted_at"), "users", ["deleted_at"], unique=False)
    op.create_index(
        "ix_users_email_case_insensitive",
        "users",
        [sa.text("lower(email)")],
        unique=True,
    )
    op.create_index(
        op.f("ix_users_modified_at"), "users", ["modified_at"], unique=False
    )

    op.create_table(
        "auth_links",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("token_hash", sa.String(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("user_email", sa.String(), nullable=False),
        sa.Column("expires_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(timezone=True), nullable=False),
        sa.Column("modified_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("auth_links_user_id_fkey"),
            ondelete="cascade",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("auth_links_pkey")),
    )
    op.create_index(
        op.f("ix_auth_links_created_at"), "auth_links", ["created_at"], unique=False
    )
    op.create_index(
        op.f("ix_auth_links_deleted_at"), "auth_links", ["deleted_at"], unique=False
    )
    op.create_index(
        op.f("ix_auth_links_modified_at"), "auth_links", ["modified_at"], unique=False
    )
    op.create_index(
        op.f("ix_auth_links_token_hash"), "auth_links", ["token_hash"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_auth_links_token_hash"), table_name="auth_links")
    op.drop_index(op.f("ix_auth_links_modified_at"), table_name="auth_links")
    op.drop_index(op.f("ix_auth_links_deleted_at"), table_name="auth_links")
    op.drop_index(op.f("ix_auth_links_created_at"), table_name="auth_links")
    op.drop_table("auth_links")
    op.drop_index(op.f("ix_users_modified_at"), table_name="users")
    op.drop_index(op.f("ix_users_email_case_insensitive"), table_name="users")
    op.drop_index(op.f("ix_users_deleted_at"), table_name="users")
    op.drop_index(op.f("ix_users_created_at"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
